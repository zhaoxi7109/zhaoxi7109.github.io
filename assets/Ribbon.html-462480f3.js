const e=JSON.parse('{"key":"v-34f2a268","path":"/codenotes/springcloud/Ribbon.html","title":"Ribbon","lang":"zh-CN","frontmatter":{"title":"Ribbon","icon":"write","category":["SpringCloud"],"tag":["Ribbon"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"2. 负载均衡 负载均衡是将请求分散到多个节点上处理，以达到负载均衡和提高系统性能的目的。常见的负载均衡算法有轮询、权重轮询、最小连接数等，其中轮询算法是最简单的一种，即按照节点顺序依次分配请求。 SpringCloud底层其实是利用了一个名为Ribbon的组件，来实现负载均衡功能的 2.1 Ribbon负载均衡 Ribbon是Netflix开源的一个基于HTTP和TCP的负载均衡器，主要用于在分布式系统中实现客户端负载均衡。Ribbon可以与Eureka、Consul等服务发现框架集成，实现动态的负载均衡和故障转移等功能。","head":[["meta",{"property":"og:url","content":"https://gitee.com/zhaoxi7109/codenotes/springcloud/Ribbon.html"}],["meta",{"property":"og:site_name","content":"昭晞的小破站"}],["meta",{"property":"og:title","content":"Ribbon"}],["meta",{"property":"og:description","content":"2. 负载均衡 负载均衡是将请求分散到多个节点上处理，以达到负载均衡和提高系统性能的目的。常见的负载均衡算法有轮询、权重轮询、最小连接数等，其中轮询算法是最简单的一种，即按照节点顺序依次分配请求。 SpringCloud底层其实是利用了一个名为Ribbon的组件，来实现负载均衡功能的 2.1 Ribbon负载均衡 Ribbon是Netflix开源的一个基于HTTP和TCP的负载均衡器，主要用于在分布式系统中实现客户端负载均衡。Ribbon可以与Eureka、Consul等服务发现框架集成，实现动态的负载均衡和故障转移等功能。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-20T05:42:02.000Z"}],["meta",{"property":"article:author","content":"zhaoxi"}],["meta",{"property":"article:tag","content":"Ribbon"}],["meta",{"property":"article:modified_time","content":"2023-07-20T05:42:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Ribbon\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-20T05:42:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zhaoxi\\",\\"url\\":\\"https://gitee.com/zhaoxi7109\\"}]}"]]},"headers":[{"level":2,"title":"2. 负载均衡","slug":"_2-负载均衡","link":"#_2-负载均衡","children":[{"level":3,"title":"2.1 Ribbon负载均衡","slug":"_2-1-ribbon负载均衡","link":"#_2-1-ribbon负载均衡","children":[]},{"level":3,"title":"2.2 负载均衡器","slug":"_2-2-负载均衡器","link":"#_2-2-负载均衡器","children":[]},{"level":3,"title":"2.3 负载均衡策略","slug":"_2-3-负载均衡策略","link":"#_2-3-负载均衡策略","children":[]},{"level":3,"title":"2.4 自定义负载均衡策略","slug":"_2-4-自定义负载均衡策略","link":"#_2-4-自定义负载均衡策略","children":[]},{"level":3,"title":"2.5 饥饿加载","slug":"_2-5-饥饿加载","link":"#_2-5-饥饿加载","children":[]}]}],"git":{"createdTime":1689831722000,"updatedTime":1689831722000,"contributors":[{"name":"zx","email":"2997605126@qq.com","commits":1}]},"readingTime":{"minutes":5.17,"words":1552},"filePathRelative":"codenotes/springcloud/Ribbon.md","localizedDate":"2023年7月20日","excerpt":"<h2> 2. 负载均衡</h2>\\n<p>负载均衡是将请求分散到多个节点上处理，以达到负载均衡和提高系统性能的目的。常见的负载均衡算法有<strong>轮询、权重轮询、最小连接数</strong>等，其中轮询算法是最简单的一种，即按照节点顺序依次分配请求。</p>\\n<p>SpringCloud底层其实是利用了一个名为<strong>Ribbon</strong>的组件，来实现负载均衡功能的</p>\\n<h3> 2.1 Ribbon负载均衡</h3>\\n<p>Ribbon是Netflix开源的一个基于HTTP和TCP的负载均衡器，主要用于在分布式系统中实现客户端负载均衡。Ribbon可以与<strong>Eureka</strong>、<strong>Consul</strong>等服务发现框架集成，实现动态的负载均衡和故障转移等功能。</p>","autoDesc":true}');export{e as data};
